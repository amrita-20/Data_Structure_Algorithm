package edu.neu.coe.info6205.madhava;

import edu.neu.coe.info6205.util.Benchmark_Timer;

import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.function.Supplier;

public class Main {
    private static final String seed = "41514118681922046978558801415141186507138775513425133394855805071387755134251333947000243944559978775513425133394700024394455997602027357141514118681922046978558050713877551342513339470005064491794337221417542413936583207273219110468136200763405383903868734075716063193470455898121026463184133253036810548567222917278712979159497923856999159689723334106769440004104465248445213531431764345932603052682764597327167965183853183415900172583029670886350141942863850229078458860554370588854518944862866263985921973627527803034689321229267363402089045726522015704282087501693923778897884243560572094353441387802647327714093005208648344386712096987209575899586511199073752228494300029678173590008662551973444128945982441541848117483823635540800639306781065132028198662321859262596212005648226134579249871801970850380282492694242171297757609737902183514884179014706720272008148141514118681922046978558050713877551342513339470002439445599760202735750644917943372214175424139365832072732191104681362007634053839038687340757160631934704558981210264631841332530368105485641514118681922046978558050713877551342513339470002439445599760202735750644917943372214175424139365832072732191104681362007634053839038687340757160631934704558981210264631841332530368105485672229172787129791594979238569991596897233341067694400041044652484452135314317643459326030526827645973271679651838531834159001725830296708863501419428638502290784588605543705888545189448628662639859219736275278030346893212292673634020890457265220157042820875016939237788978842435605720943534413878026473277140930052086483443867120969872095758995865111990737522284943000296781735900086625519734441289459824415418481174838236355408006393067810651320281986623218592625962120056482261345792498718019708503802824926942421712977576097379021835148841790147067202720081481415141186819220469785580507138775513425133394700024394455997602027357506449179433722141754241393658320727321911046813620076340538390386873407571606319347045589812102646318413325303681054856";
    public static DecimalFormat numberFormat = new DecimalFormat("#.00");
    public Supplier<BigNumber> bigNumSupplier(int multiplier) {
        return () -> {
            return BigNumber.parse("3." + seed.repeat(10 * multiplier));
        };
    }

    public static void main(String[] args) {
        int maxMultiplier = 5;
        List<Integer> inputSize = new ArrayList<>();
        List<BigNumber> input = new ArrayList<>();
        List<Double> duration = new ArrayList<>();

        for (int multiplier = 1; multiplier <= maxMultiplier; multiplier++) {
            Supplier<BigNumber> supplier = new Main().bigNumSupplier(multiplier);

            final BigNumber[] actualInput = new BigNumber[1];
            final double timeTaken = new Benchmark_Timer<BigNumber>(
                    "Run Karatsuba",
                    bigNum -> {
                        bigNum.multiplyWithKaratsuba(bigNum);
                    },
                    bigNumber -> actualInput[0] = bigNumber
            ).runFromSupplier(supplier, 5);

            System.out.println(actualInput[0].toString().length()+ ", " + numberFormat.format(timeTaken));

            inputSize.add(multiplier * seed.length());
            duration.add(timeTaken);
            input.add(actualInput[0]);
        }

        for (int i = 0; i < maxMultiplier; i++) {
            System.out.printf("Size: %d, actualSize: %d, time: %f\n",
                    inputSize.get(i),
                    input.get(i).toString().length(),
                    duration.get(i));
        }
    }
}
